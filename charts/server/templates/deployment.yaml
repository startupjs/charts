{{- $name := print .Release.Name "-server" -}}

apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ $name }}
  labels:
    app: {{ $name }}
spec:
  replicas: {{ .Values.replicas }}
  revisionHistoryLimit: 3
  selector:
    matchLabels:
      app: {{ $name }}
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: {{ $name }}
    spec:
      containers:
      - name: {{ $name }}
        # image: "gcr.io/{{ .Values.global.project }}/{{ .Release.Name }}:latest"
        image: hashicorp/http-echo
        args: [-text="hello world again", '-listen=:3000']
        imagePullPolicy: Always
        ports:
        - name: http
          protocol: TCP
          containerPort: 3000
        envFrom:
        - configMapRef:
            name: {{ .Release.Name }}
        readinessProbe:
          httpGet:
            path: /healthcheck
            port: 3000
            scheme: HTTP
          initialDelaySeconds: 3
          periodSeconds: 3
        livenessProbe:
          failureThreshold: 3
          httpGet:
            path: /healthcheck
            port: 3000
            scheme: HTTP
          initialDelaySeconds: 90
          periodSeconds: 3
          timeoutSeconds: 10

# Image for testing:
# image: hashicorp/http-echo
# args: [-text="cron", '-listen=:3000']
